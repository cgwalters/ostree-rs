// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files
// DO NOT EDIT

use crate::RepoFinder;
use glib::translate::*;
use std::fmt;

glib::wrapper! {
    #[doc(alias = "OstreeRepoFinderConfig")]
    pub struct RepoFinderConfig(Object<ffi::OstreeRepoFinderConfig, ffi::OstreeRepoFinderConfigClass>) @implements RepoFinder;

    match fn {
        type_ => || ffi::ostree_repo_finder_config_get_type(),
    }
}

impl RepoFinderConfig {
    #[doc(alias = "ostree_repo_finder_config_new")]
    pub fn new() -> RepoFinderConfig {
        unsafe {
            from_glib_full(ffi::ostree_repo_finder_config_new())
        }
    }
}

#[cfg(any(feature = "v2018_6", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v2018_6")))]
impl Default for RepoFinderConfig {
    fn default() -> Self {
        Self::new()
    }
}

impl fmt::Display for RepoFinderConfig {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("RepoFinderConfig")
    }
}
